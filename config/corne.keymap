/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        homerowL: homerowL {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROWL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <13 14 15 16 17 18 19 20 21 22>;
            quick-tap-ms = <(-1)>;
            require-prior-idle-ms = <(-1)>;
            flavor = "balanced";
            hold-while-undecided;
        };
    };

    combos {
        compatible = "zmk,combos";

        number_selector {
            bindings = <&to 1>;
            key-positions = <2 3 4 1>;
        };

        default_selector {
            bindings = <&to 0>;
            key-positions = <13 14 15 16>;
        };

        special_selector {
            bindings = <&to 2>;
            key-positions = <7 8 9 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q                   &kp W                     &kp E                 &kp R                     &kp T    &kp Y      &kp U                      &kp I                  &kp O                      &kp P                       &kp BSPC
&kp TAB     &homerowL LEFT_SHIFT A  &homerowL LEFT_CONTROL S  &homerowL LEFT_ALT D  &homerowL LEFT_COMMAND F  &kp G    &kp H      &homerowL RIGHT_COMMAND J  &homerowL RIGHT_ALT K  &homerowL RIGHT_CONTROL L  &homerowL RIGHT_SHIFT SEMI  &kp ENTER
&kp LSHFT   &kp Z                   &kp X                     &kp C                 &kp V                     &kp B    &kp N      &kp M                      &kp COMMA              &kp DOT                    &kp MINUS                   &kp SLASH
                                                              &mo 1                 &kp SPACE                 &mo 2    &kp ENTER  &kp SPACE                  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp NUMBER_1        &kp N2            &kp N3                &kp N4                &kp N5       &kp N6    &kp N7                        &kp N8                        &kp N9                         &kp N0        &kp BSPC
&trans     &kp LC(LEFT_SHIFT)  &kp LEFT_CONTROL  &kp LS(RC(LEFT_ALT))  &kp LS(LEFT_COMMAND)  &trans       &kp LEFT  &homerowL RIGHT_COMMAND DOWN  &homerowL RIGHT_ALT UP_ARROW  &homerowL RIGHT_CONTROL RIGHT  &kp QUESTION  &trans
&kp LSHFT  &kp LEFT_CONTROL    &trans            &trans                &trans                &to 3        &trans    &trans                        &trans                        &trans                         &trans        &trans
                                                 &kp LGUI              &trans                &kp SPACE    &kp RET   &trans                        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL           &kp AT            &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans             &trans            &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                                &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_CLR  &bt BT_CLR_ALL  &trans  &trans      &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &bt BT_PRV  &trans          &trans  &bt BT_NXT  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &to 0           &trans      &trans          &trans  &trans      &trans  &trans
                                        &trans        &trans        &trans          &trans      &trans          &trans
            >;
        };
    };
};
